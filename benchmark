#!/usr/bin/make -rRf
my_mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
my_current_dir :=  $(patsubst %/,%,$(dir $(my_mkfile_path)))/
include $(my_current_dir)/bargoat
ECHO := echo -e
benchmark_aux_path = $(my_current_dir)/benchmark_aux/
GET_TIME := $(benchmark_aux_path)get_time.awk
GET_MEM := $(benchmark_aux_path)get_mem.awk
GET_ACCURACY := $(benchmark_aux_path)get_accuracy.awk
CONVERT_STARCODE := $(benchmark_aux_path)convert_starcode_to_cluster.sh
CONVERT_RAINBOW := $(benchmark_aux_path)convert_rainbow_to_cluster.sh
CONVERT_DUNOVO := $(benchmark_aux_path)convert_dunovo_to_cluster.sh

starcode?=starcode
starcode_dist?=4
starcode_params=dist_$(starcode_dist).
starcode_output_prefix=$(input_reads_prefix)starcode.$(starcode_params)
starcode_output=$(starcode_output_prefix)out
starcode_cluster=$(starcode_output_prefix)cluster
starcode_accuracy=$(starcode_output_prefix)accuracy
starcode_time=$(starcode_output_prefix)time

rainbow?=rainbow
rainbow_div?=false
rainbow_mismatch?=4
rainbow_params=mismatch_$(rainbow_mismatch).div_$(rainbow_div).
rainbow_output_prefix=$(input_reads_prefix)rainbow.$(rainbow_params)
rainbow_output=$(rainbow_output_prefix)out
rainbow_cluster=$(rainbow_output_prefix)cluster
rainbow_accuracy=$(rainbow_output_prefix)accuracy
rainbow_time=$(rainbow_output_prefix)time

# dunovo_prefix is the directory where dunovo is cloned
dunovo_prefix?=
# temporary directory deleted after each run
dunovo_temp_directory?=$(my_current_dir)/temp
dunovo_dist?=2
dunovo_barcode_length?=$(barcode_length)
dunovo_invariant?=0
dunovo_params=dist_$(dunovo_dist).
dunovo_output_prefix=$(input_reads_prefix)dunovo.$(dunovo_params)
dunovo_output=$(dunovo_output_prefix)out
dunovo_cluster=$(dunovo_output_prefix)cluster
dunovo_accuracy=$(dunovo_output_prefix)accuracy
dunovo_time=$(dunovo_output_prefix)time

bargoat_output_prefix=$(input_reads_prefix)bargoat.$(clustering_params)
bargoat_accuracy=$(bargoat_output_prefix)accuracy
bargoat_time=$(bargoat_output_prefix)time

bargoat_log_file?=$(input_reads_prefix)bargoat_benchmarks.tsv
starcode_log_file?=$(input_reads_prefix)starcode_benchmarks.tsv
dunovo_log_file?=$(input_reads_prefix)dunovo_benchmarks.tsv
rainbow_log_file?=$(input_reads_prefix)rainbow_benchmarks.tsv

run: bargoat_log starcode_log rainbow_log


bargoat_log: $(bargoat_log_file) $(bargoat_accuracy)
	$(eval my_time := $(shell $(GET_TIME) $(bargoat_time)))
	$(eval my_mem := $(shell $(GET_MEM) $(bargoat_time)))
	$(eval my_accuracy := $(shell $(GET_ACCURACY) $(bargoat_accuracy)))
	$(eval my_timestamp := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S"))
	$(ECHO) "$(my_timestamp)\t$(my_time)\t$(my_mem)\t$(my_accuracy)\t$(barcode_length)\t$(minimizers_num)\t$(kmer_size)\t$(barcode_error_tolerance)\t$(minimizers_threshold)" >> $(bargoat_log_file);

$(bargoat_log_file):
	$(ECHO) "my_timestamp\ttime\tmem\tARI\tbarcode_length\tminimizers_num\tkmer_size\tbarcode_error_tolerance\tminimizers_threshold" > $(bargoat_log_file)

$(bargoat_accuracy): $(bargoat_time)
	$(python3) $(simulating_path)rand_index.py \
		--input-cluster-file $(cluster_file) \
		--input-amplified-molecule $(input_amplified_molecules) \
		--output-accuracy-results $(bargoat_accuracy)

$(bargoat_time): $(clustering_path)bargoat.o simulate
	/usr/bin/time -v -o $(bargoat_time) \
	$(clustering_path)bargoat.o \
		--input-forward $(forward_reads) \
		--input-reverse $(reverse_reads) \
		--output-prefix $(output_prefix) \
		--barcode-length $(barcode_length) \
		--minimizer-count $(minimizers_num) \
		--kmer-size $(kmer_size) \
		--error-tolerance $(barcode_error_tolerance) \
		--minimizer-threshold $(minimizers_threshold) \
		$(silent)

# Starcode
starcode_log: $(starcode_log_file) $(starcode_accuracy)
	$(eval my_time := $(shell $(GET_TIME) $(starcode_time)))
	$(eval my_mem := $(shell $(GET_MEM) $(starcode_time)))
	$(eval my_accuracy := $(shell $(GET_ACCURACY) $(starcode_accuracy)))
	$(eval my_timestamp := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S"))
	$(ECHO) "$(my_timestamp)\t$(my_time)\t$(my_mem)\t$(my_accuracy)\t$(starcode_dist)" >> $(starcode_log_file);

$(starcode_log_file):
	$(ECHO) "my_timestamp\ttime\tmem\tARI\tstarcode_dist" > $(starcode_log_file)

$(starcode_accuracy): $(starcode_time)
	$(CONVERT_STARCODE) $(starcode_output) > $(starcode_cluster);
	$(python3) $(simulating_path)rand_index.py \
		--input-cluster-file $(starcode_cluster) \
		--input-amplified-molecule $(input_amplified_molecules) \
		--output-accuracy-results $(starcode_accuracy)

$(starcode_time): simulate
	/usr/bin/time -v -o $(starcode_time) \
		$(starcode) \
			-1 $(forward_reads) \
			-2 $(reverse_reads) \
			-d $(starcode_dist) \
			--print-clusters \
			--seq-id \
			> $(starcode_output)

# Du Novo
dunovo_log: $(dunovo_log_file) $(dunovo_accuracy)
	$(eval my_time := $(shell $(GET_TIME) $(dunovo_time)))
	$(eval my_mem := $(shell $(GET_MEM) $(dunovo_time)))
	$(eval my_accuracy := $(shell $(GET_ACCURACY) $(dunovo_accuracy)))
	$(eval my_timestamp := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S"))
	$(ECHO) "$(my_timestamp)\t$(my_time)\t$(my_mem)\t$(my_accuracy)\t$(dunovo_dist)" >> $(dunovo_log_file);

$(dunovo_log_file):
	$(ECHO) "my_timestamp\ttime\tmem\tARI\tdunovo_dist" > $(dunovo_log_file)

$(dunovo_accuracy): $(dunovo_time)
	$(CONVERT_DUNOVO) $(dunovo_output) > $(dunovo_cluster);
	$(python3) $(simulating_path)rand_index.py \
		--input-cluster-file $(dunovo_cluster) \
		--input-amplified-molecule $(input_amplified_molecules) \
		--output-accuracy-results $(dunovo_accuracy)

$(dunovo_time): simulate
	# Making families
	mkdir -p $(dunovo_temp_directory)/refdir
	paste $(forward_reads) $(reverse_reads) | \
		paste - - - - | \
		awk -f $(dunovo_prefix)/make-barcodes.awk -v INVARIANT=$(dunovo_invariant) TAG_LEN=$(barcode_length) | \
		sort > $(dunovo_temp_directory)/uncorrected_families.tsv;
	# Aligning families
	$(dunovo_prefix)/baralign.sh $(dunovo_temp_directory)/uncorrected_families.tsv $(dunovo_temp_directory)/refdir $(dunovo_temp_directory)/temp.bam;
	# Correcting barcodes
	samtools view -f 256 $(dunovo_temp_directory)/temp.bam | \
		$(dunovo_prefix)/correct.py -d $(dunovo_dist) $(dunovo_temp_directory)/uncorrected_families.tsv $(dunovo_temp_directory)/refdir/barcodes.fa | \
		sort > $(dunovo_output)
	#_families.corrected.tsv
	# Cleaning intermediate files...
	rm -rf $(dunovo_temp_directory)


# Rainbow
rainbow_log: $(rainbow_log_file) $(rainbow_accuracy)
	$(eval my_time := $(shell $(GET_TIME) $(rainbow_time)))
	$(eval my_mem := $(shell $(GET_MEM) $(rainbow_time)))
	$(eval my_accuracy := $(shell $(GET_ACCURACY) $(rainbow_accuracy)))
	$(eval my_timestamp := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S"))
	$(ECHO) "$(my_timestamp)\t$(my_time)\t$(my_mem)\t$(my_accuracy)\t$(rainbow_mismatch)\t$(rainbow_div)" >> $(rainbow_log_file);

$(rainbow_log_file):
	$(ECHO) "my_timestamp\ttime\tmem\tARI\trainbow_mismatch\trainbow_div" > $(rainbow_log_file)

$(rainbow_accuracy): $(rainbow_time)
	$(CONVERT_RAINBOW) $(rainbow_output) > $(rainbow_cluster);
	$(python3) $(simulating_path)rand_index.py \
		--input-cluster-file $(rainbow_cluster) \
		--input-amplified-molecule $(input_amplified_molecules) \
		--output-accuracy-results $(rainbow_accuracy)


$(rainbow_time): simulate
ifeq ($(rainbow_div),false)
	/usr/bin/time -v -o $(rainbow_time) \
		$(rainbow) cluster \
			-1 $(forward_reads) \
			-2 $(reverse_reads) \
			-m $(rainbow_mismatch) \
			> $(rainbow_output)
else
	/usr/bin/time -v -o $(rainbow_time) \
		$(rainbow) cluster \
			-1 $(forward_reads) \
			-2 $(reverse_reads) \
			-m $(rainbow_mismatch) \
			| $(rainbow) div \
			> $(rainbow_output)
endif
