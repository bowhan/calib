#!/usr/bin/make -rRf
my_mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
my_current_dir :=  $(patsubst %/,%,$(dir $(my_mkfile_path)))/
include $(my_current_dir)/bargoat
ECHO := echo -e
GET_TIME := $(my_current_dir)/benchmark_aux/get_time.awk
GET_MEM := $(my_current_dir)/benchmark_aux/get_mem.awk
GET_ACCURACY := $(my_current_dir)/benchmark_aux/get_accuracy.awk

rainbow?=rainbow
rainbow_mismatch?=4
rainbow_params=mismatch_$(rainbow_mismatch).
rainbow_output_prefix=$(input_reads_prefix)$(rainbow_params)rainbow.
rainbow_output=$(rainbow_output_prefix)out
rainbow_accuracy=$(rainbow_output)accuracy
rainbow_time=$(rainbow_output)time

starcode?=starcode
starcode_dist?=4
starcode_params=dist_$(starcode_dist).
starcode_output_prefix=$(input_reads_prefix)$(starcode_params)starcode.
starcode_output=$(starcode_output_prefix)out
starcode_accuracy=$(starcode_output)accuracy
starcode_time=$(starcode_output)time

bargoat_output_prefix=$(input_reads_prefix)bargoat.$(clustering_params)
bargoat_accuracy=$(bargoat_output_prefix)accuracy
bargoat_time=$(bargoat_output_prefix)time

bargoat_log_file?=$(input_reads_prefix)bargoat_benchmarks.tsv
starcode_log_file?=$(input_reads_prefix)starcode_benchmarks.tsv
rainbow_log_file?=$(input_reads_prefix)rainbow_benchmarks.tsv

benchmark: bargoat_log starcode_log rainbow_log


bargoat_log: $(bargoat_log_file) $(bargoat_accuracy)
	$(eval my_time := $(shell $(GET_TIME) $(bargoat_time)))
	$(eval my_mem := $(shell $(GET_MEM) $(bargoat_time)))
	$(eval my_accuracy := $(shell $(GET_ACCURACY) $(bargoat_accuracy)))
	$(eval my_timestamp := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S"))
	$(ECHO) "$(my_timestamp)\t$(my_time)\t$(my_mem)\t$(my_accuracy)\t$(barcode_length)\t$(minimizers_num)\t$(kmer_size)\t$(barcode_error_tolerance)\t$(minimizers_threshold)" >> $(bargoat_log_file);

$(bargoat_log_file):
	$(ECHO) "my_timestamp\ttime\tmem\tARI\tbarcode_length\tminimizers_num\tkmer_size\tbarcode_error_tolerance\tminimizers_threshold" > $(bargoat_log_file)

$(bargoat_accuracy): $(bargoat_time)
	$(python3) $(simulating_path)rand_index.py \
		--input-cluster-file $(cluster_file) \
		--input-amplified-molecule $(input_amplified_molecules) \
		--output-accuracy-results $(bargoat_accuracy)

$(bargoat_time): $(clustering_path)bargoat.o simulate
	/usr/bin/time -v -o $(bargoat_time) \
	$(clustering_path)bargoat.o \
		--input-forward $(forward_reads) \
		--input-reverse $(reverse_reads) \
		--output-prefix $(output_prefix) \
		--barcode-length $(barcode_length) \
		--minimizer-count $(minimizers_num) \
		--kmer-size $(kmer_size) \
		--error-tolerance $(barcode_error_tolerance) \
		--minimizer-threshold $(minimizers_threshold) \
		$(silent)

starcode_log: $(starcode_accuracy)
	touch $(starcode_log_file)



rainbow_log: $(rainbow_accuracy)
	touch $(rainbow_log_file)



$(starcode_accuracy): $(starcode_time)

$(rainbow_accuracy): $(rainbow_time)




$(starcode_time): simulate
	/usr/bin/time -v -o $(starcode_time) \
	$(starcode) \
	-1 $(forward_reads) \
	-2 $(reverse_reads) \
	-d $(starcode_dist) \
	--print-clusters \
	--seq-id \
	> $(starcode_output)

$(rainbow_time): simulate
	/usr/bin/time -v -o $(rainbow_time) \
	$(rainbow) \
	-1 $(forward_reads) \
	-2 $(reverse_reads) \
	-m \
	> $(rainbow_output)
